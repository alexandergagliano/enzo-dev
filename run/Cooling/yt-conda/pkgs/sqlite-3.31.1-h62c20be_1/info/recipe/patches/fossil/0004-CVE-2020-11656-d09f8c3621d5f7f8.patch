Index: src/alter.c
==================================================================
--- src/alter.c
+++ src/alter.c
@@ -752,10 +752,25 @@
       sqlite3WalkSelect(pWalker, p);
       sqlite3RenameExprlistUnmap(pWalker->pParse, pWith->a[i].pCols);
     }
   }
 }
+
+/*
+** Unmap all tokens in the IdList object passed as the second argument.
+*/
+static void unmapColumnIdlistNames(
+  Parse *pParse,
+  IdList *pIdList
+){
+  if( pIdList ){
+    int ii;
+    for(ii=0; ii<pIdList->nId; ii++){
+      sqlite3RenameTokenRemap(pParse, 0, (void*)pIdList->a[ii].zName);
+    }
+  }
+}
 
 /*
 ** Walker callback used by sqlite3RenameExprUnmap().
 */
 static int renameUnmapSelectCb(Walker *pWalker, Select *p){
@@ -774,10 +789,11 @@
   if( ALWAYS(p->pSrc) ){  /* Every Select as a SrcList, even if it is empty */
     SrcList *pSrc = p->pSrc;
     for(i=0; i<pSrc->nSrc; i++){
       sqlite3RenameTokenRemap(pParse, 0, (void*)pSrc->a[i].zName);
       if( sqlite3WalkExpr(pWalker, pSrc->a[i].pOn) ) return WRC_Abort;
+      unmapColumnIdlistNames(pParse, pSrc->a[i].pUsing);
     }
   }
 
   renameWalkWith(pWalker, p);
   return WRC_Continue;
@@ -981,10 +997,11 @@
         renameTokenFind(pParse, pCtx, (void*)zName);
       }
     }
   }
 }
+
 
 /*
 ** Parse the SQL statement zSql using Parse object (*p). The Parse object
 ** is initialized by this function before it is used.
 */

Index: test/altertab.test
==================================================================
--- test/altertab.test
+++ test/altertab.test
@@ -627,7 +627,18 @@
 } {1}
 do_execsql_test 19.120 {
   INSERT INTO t3(x) VALUES('xyz');
   SELECT * FROM t2;
 } {1 1 1 1 1 1 1 1}
+
+# Ticket 4722bdab08cb14
+reset_db
+do_execsql_test 20.0 {
+  CREATE TABLE a(a);
+  CREATE VIEW b AS SELECT(SELECT *FROM c JOIN a USING(d, a, a, a) JOIN a) IN();
+}
+
+do_execsql_test 20.1 {
+  ALTER TABLE a RENAME a TO e;
+} {}
 
 finish_test

